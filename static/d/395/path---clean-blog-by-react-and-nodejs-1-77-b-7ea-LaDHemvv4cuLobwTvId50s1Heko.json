{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"cf31cf6b-5928-5434-8454-eae8ed90b7ae","html":"<h2>前言</h2>\n<p>介于最近一直在维护公司的业务没有真正自我提高，因此，每天吃饭睡觉上厕所的时候都会想之前都会想等公司业务结束之后的事情。终于，经过半个多月的思考，准备把公司的<code class=\"language-text\">scala+palyframework</code> “恶心组合”换成<code class=\"language-text\">Node</code>，不过先要从尝试做起。接下来的七天，我会着手用<code class=\"language-text\">Node</code>和<code class=\"language-text\">react</code>去完成一个前后端的博客系统。虽然对这种以内容居多的网页很多人不建议搞成<code class=\"language-text\">SPA</code> ，但是为了学习着想我还是愿意去踩着个坑。</p>\n<!--more-->\n<h3>下面便是整个架构的搭建。</h3>\n<p>所用到的技术</p>\n<ul>\n<li>\n<p>Node   \t\t\tv6.2.2</p>\n<ul>\n<li>express.js  \t   v4.13.4</li>\n</ul>\n</li>\n<li>\n<p>React</p>\n<ul>\n<li>react-router</li>\n</ul>\n</li>\n<li>Webpack</li>\n<li>Babel</li>\n<li>EJS</li>\n<li>Bootstrap Clean Blog</li>\n</ul>\n<p>其他版本请关注<code class=\"language-text\">/package.json</code></p>\n<h2>开始实战</h2>\n<h3>目录结构的生成</h3>\n<p>首先，要全局安装<code class=\"language-text\">express</code></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g express</code></pre>\n      </div>\n<p>在命令行中切换到你想要的的本地目录，生成<code class=\"language-text\">express</code>，<code class=\"language-text\">-e</code> 表示使用<code class=\"language-text\">ejs</code>的模板引擎，并安装依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">    express -e express-react-2\n    <span class=\"token function\">cd</span> express-react-2\n    <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre>\n      </div>\n<p><img src=\"https://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react-1.png\" alt=\"node-express\"></p>\n<p>安装完成之后先不急着运行，可以先看看目录结构</p>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">    express-react-2\n    /bin\n    /node_modules\n    /public\n    \t|- stylesheets\n    \t|- javascripts\n    \t|- images\n    /routes\n    \t|- index.js\n    \t|- users.js\n    /views\n    \t|- index.ejs\n    \t|- error.ejs\n    app.js\n    package.json</code></pre>\n      </div>\n<h3>添加<code class=\"language-text\">React/webpack/babel</code>依赖</h3>\n<p><code class=\"language-text\">package.json</code>文件如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"express-react-2\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.0\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"private\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --process --colors --watch\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./bin/www\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"body-parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~1.15.1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"cookie-parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~1.4.3\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"debug\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.2.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"ejs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.4.1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"express\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~4.13.4\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"morgan\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~1.7.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^15.4.1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"react-dom\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^15.4.1\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"react-router\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^3.0.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"serve-favicon\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~2.3.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^1.14.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-core\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.10.4\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-loader\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.2.4\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-polyfill\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.16.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-preset-es2015\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.6.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-preset-react\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.5.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-preset-stage-2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.17.0\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"babel-preset-stage-3\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^6.17.0\"</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>通过如下命令，来进行依赖的安装。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">    <span class=\"token function\">npm</span> <span class=\"token function\">install</span></code></pre>\n      </div>\n<p>安装完成之后，在项目根目录下新建wepack.config.js文件，为了使用ES6的语法，写入如下内容：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token keyword\">var</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span>\n\n    module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        entry<span class=\"token punctuation\">:</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">,</span>\n        output<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            path<span class=\"token punctuation\">:</span> <span class=\"token string\">'public/javascripts/local/dist'</span><span class=\"token punctuation\">,</span>\n            filename<span class=\"token punctuation\">:</span> <span class=\"token string\">'bundle.js'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            loaders<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n                test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/.js?$/</span><span class=\"token punctuation\">,</span>\n                loader<span class=\"token punctuation\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n                exclude<span class=\"token punctuation\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n                query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                    presets<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'es2015'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">]</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<h4>解释如下</h4>\n<table>\n<thead>\n<tr>\n<th>key</th>\n<th align=\"left\">value</th>\n<th align=\"left\">explain</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>entry</td>\n<td align=\"left\">./src/index.js</td>\n<td align=\"left\">可以理解为需要转语法的文件(react项目虽然有无数个jsx文件，但是，由于层层引用，因此这里只需要对index.js作为入口文件即可)</td>\n</tr>\n<tr>\n<td>path</td>\n<td align=\"left\">public/javascripts/local/dist</td>\n<td align=\"left\">生成的目标文件，最终将在index.html中引用</td>\n</tr>\n<tr>\n<td>filename</td>\n<td align=\"left\">bundle.js</td>\n<td align=\"left\">生成的文件名，即最终在index.html中引用bundle.js文件</td>\n</tr>\n<tr>\n<td>module</td>\n<td align=\"left\">Array</td>\n<td align=\"left\">添加babel对ES5-ES6的设置</td>\n</tr>\n</tbody>\n</table>\n<br/>\n除此之外，还需要新建`.babelrc`文件，写入以下内容\n```\n    {\n        presets: ['es2015', 'react', 'stage-2']\n    }\n```\n> 到此为止，所有的项目配置已经完成。当你设置路由并且写入`react`代码时，就可以发现有输出了。这里，我将`wepack`命令，写入到了`npm`的脚本当中。\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\">    <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"webpack\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --process --colors --watch\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node ./bin/www\"</span>\n    <span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>通过运行第一行命令，可以执行<code class=\"language-text\">webpack</code>有关内容，通过第二行命令，可以启动<code class=\"language-text\">node</code>服务，刻意做到了前后分离的效果。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">    <span class=\"token function\">npm</span> run webpack\n    <span class=\"token function\">npm</span> start</code></pre>\n      </div>\n<h3>测试webpack</h3>\n<p>在项目根目录下新建<code class=\"language-text\">src/index.js</code>，键入最基本的<code class=\"language-text\">ES6</code>代码。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\">    <span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">+</span> b <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>可以看到控制台有<code class=\"language-text\">webpack</code>的输出</p>\n<p><img src=\"https://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react-2.png\" alt=\"node-express-webpack\"></p>\n<p>并且看到<code class=\"language-text\">/public/javascripts/local/dist/index.js</code>中内容已经转化为ES5语法</p>\n<p><img src=\"https://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react-3.png\" alt=\"node-express-webpack\"></p>\n<h3>总结</h3>\n<p>项目至此前端与服务器部分已搭建完成，当然，还有一些基本的<code class=\"language-text\">express</code>路由和<code class=\"language-text\">react</code>路由没有配置。这不是本次记录主要涉及的内容，后续会依次进行记录。项目的开发会跑在开发之前。至今为止，已经搭建好了前端路由以及后端服务器路由。一些基本的样式已经写好，并且借用用了<code class=\"language-text\">bootstrap clean blog</code>主题，可以先一睹<code class=\"language-text\">SPA</code>的风采。</p>","frontmatter":{"title":"Clean Blog by Node && React","date":"Invalid date"}}},"pageContext":{"slug":"/clean-blog-by-react-and-nodejs-1/","previous":{"fields":{"slug":"/2017-04-24-ECMASCRIPT6 -- 碎片化记忆/"},"frontmatter":{"title":"ECMASCRIPT6 -- 碎片化记忆"}},"next":{"fields":{"slug":"/2017-02-27-ESLint 的使用/"},"frontmatter":{"title":"ESLint 的使用"}}}}