{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"1171fb32-571e-5e7e-b532-95696336f8f4","html":"<h2>前言</h2>\n<ul>\n<li>\n<p>此次记录承接上篇<a href=\"https://beacelee.com/post/clean-blog-react-node-2.html\">Clean Blog by Node &#x26;&#x26; React 2</a></p>\n</li>\n<li>\n<p><code class=\"language-text\">Node</code>连接<code class=\"language-text\">MongoDB</code>数据库(<code class=\"language-text\">mongoose</code>的使用）</p>\n</li>\n<li>\n<p><code class=\"language-text\">express</code>书写<code class=\"language-text\">API</code></p>\n</li>\n</ul>\n<!--more-->\n<h2>开始实战</h2>\n<h3>后端路由规划</h3>\n<p><a href=\"https://beacelee.com/post/clean-blog-react-node-2.html\">上一次记录</a>提到了路由规划，在这里回顾一下。简单定义了如下路由。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\">\n      <pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// /routes/index.js</span>\nmodule<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">exports</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Article\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/about\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"About\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/contact\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Contact\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/article/:id\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"index\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Article Detail\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>以上代码段，是对于<strong>前端页面请求服务器时的路由定义</strong>，可以看到所有的路由都指向了<code class=\"language-text\">index</code>。之所谓<code class=\"language-text\">单页面应用（SPA）</code>,特点就体现在这里。具体内部的实现，还是要依靠<code class=\"language-text\">react-router</code>。但是，如果没有服务器对应路由，刷新页面或者输入<code class=\"language-text\">url</code>请求页面时，就会出现<code class=\"language-text\">404</code>的效果。所以，<strong>前端页面的路由必须和服务器路由相匹配</strong>，才能得到正确的相应（<code class=\"language-text\">200 ok</code>）。</p>\n<h4>API路由</h4>\n<p>按照惯例，我统一将后端路由前面添加了一个<code class=\"language-text\">api</code>，便于与前端区分。凡是涉及到后端路由的，均在<code class=\"language-text\">URL</code>中添加<code class=\"language-text\">/api</code>作为区分。如下代码分别定义了<em>文章列表</em>，<em>文章详情</em>，<em>添加文章</em>三个接口。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// /routes/index.js</span>\n\n<span class=\"token comment\">//API    文章列表</span>\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/post'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//API    文章详情</span>\napp<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/post/:id'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//API    添加文章</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/post'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<h3>连接MongoDB</h3>\n<h4>添加<code class=\"language-text\">mongoose</code>库的添加</h4>\n<p>切换到根目录下，执行命令。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save mongoose</code></pre>\n      </div>\n<h4>连接数据库</h4>\n<p>根目录下新建文件<code class=\"language-text\">mongo.js</code>。引入<code class=\"language-text\">mongoose</code>模块，创建连接。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">/</span>mongo<span class=\"token punctuation\">.</span>js\n<span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongoose'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmongoose<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb://localhost/article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<blockquote>\n<p>这样做的原因，一是因为随时要用到这两句话，将其独立出来，直接引用暴露出来的模块更为方便；更加重要的原因是，如果每次请求都去创建连接，会造成去<code class=\"language-text\">open</code>一个已经<code class=\"language-text\">open</code>的连接，造成异常的情况出现（如下错误提示），与其每次要关闭连接，不如每次去复用。</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Trying to open unclosed connection.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>Error: Trying to open unclosed connection.\n    at NativeConnection.Connection.open (/Users/beace/Documents/beace/react-blog/express-react/node_modules/mongoose/lib/connection.js:237:15)\n.........\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h4>数据库查询</h4>\n<p>上述步骤已经连接到了数据库，但是，还要去请求数据，按照<code class=\"language-text\">mongoose</code>的<a href=\"http://mongoosejs.com/docs/\">官方文档</a>，我们先来定义一个<code class=\"language-text\">Schema</code>。</p>\n<p>新建<code class=\"language-text\">/src/models/schema.js</code>，加入如下代码。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> mongoose <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'../../mongo.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> Schema <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span>Schema<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> articleSchema <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Schema</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    author<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'beace'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> String\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    abstract<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> String\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    content<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> String\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    date<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> Date<span class=\"token punctuation\">.</span>now\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    collection<span class=\"token punctuation\">:</span> <span class=\"token string\">\"articles\"</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> articleSchema<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>这里，创建了一个<code class=\"language-text\">Schema</code>实例，并且添加了一些默认值。将来的数据库也大概具有这些字段。在文章列表里，书写请求的代码。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\">\n      <pre class=\"language-js\"><code class=\"language-js\">app<span class=\"token punctuation\">.</span><span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/articles'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> db <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">createConnection</span><span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//名为article的数据库</span>\n    db<span class=\"token punctuation\">.</span><span class=\"token function\">once</span><span class=\"token punctuation\">(</span><span class=\"token string\">'open'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> Article <span class=\"token operator\">=</span> mongoose<span class=\"token punctuation\">.</span><span class=\"token function\">model</span><span class=\"token punctuation\">(</span><span class=\"token string\">'articles'</span><span class=\"token punctuation\">,</span> articleSchema<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 名为articles的collection</span>\n        Article<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            author<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Beace\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">,</span> docs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>docs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n      </div>\n<p>在这里，我们进行了数据库连接的创建，并且查询了一次数据库。大可不必在乎这些写法，我最初在学习的时候就使用的最基本的查询方式，当然，在这里我使用了<code class=\"language-text\">mongoose</code>，遵照它的写法去查询数据库。最终返回给前端<code class=\"language-text\">json</code>的数据格式。</p>\n<blockquote>\n<p>进行到这里，好像任务就已经结束了。但是好像有个事情遗漏掉了，我们好像没有创建数据库。因此需要对数据库进行创建、添加字段等操作。</p>\n</blockquote>\n<h3>数据库的创建</h3>\n<p>在这里，为了操作简单。我使用了<code class=\"language-text\">Robomongo</code>这个软件来进行可视化的操作。如下图，我创建了一个名为<code class=\"language-text\">article</code>的数据库，并且有一个名为<code class=\"language-text\">articles</code>的<code class=\"language-text\">collection</code>，在上段代码注释中有所体现。</p>\n<p><img src=\"https://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react3/node-react-3.jpg\" alt=\"robomongo\"></p>\n<p>到这里，数据库的创建已经完毕了。可以到测试工具<code class=\"language-text\">postman</code>中测试下代码的正确性。这里请求到了一个对象数组的数据，如下部分截图。</p>\n<p><img src=\"https://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react3/react-node3-2.jpg\" alt=\"robomongo\"></p>\n<h2>总结</h2>\n<p>这一篇内容，大概记录了从后端路由开始，到<code class=\"language-text\">API</code>的书写，再到数据库的连接和创建。其中，多少会有坑的存在。例如，把连接数据库这个操作放在每个<code class=\"language-text\">API</code>请求里。下一篇的内容，将着重从前端渲染，包括<code class=\"language-text\">markdown</code>形式如何处理，以及开源<code class=\"language-text\">markdown</code>编辑器的引入等方面进行记录。</p>\n<p>暂且先预览一下最终效果。</p>\n<h3>列表页</h3>\n<p><img src=\"http://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react3/node-react3-3.jpg\" alt=\"robomongo\"></p>\n<h3>详情页</h3>\n<p><img src=\"http://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react3/node-react3-4.jpg\" alt=\"robomongo\"></p>\n<h3>发表页</h3>\n<p><img src=\"http://images-manager.oss-cn-shanghai.aliyuncs.com/static/node-react/node-react3/node-react3-6.jpg\" alt=\"robomongo\"></p>","frontmatter":{"title":"Clean Blog by Node && React 3","date":"December 16, 2016"}}},"pageContext":{"slug":"/clean-blog-by-react-and-nodejs-3/","previous":{"fields":{"slug":"/2018-06-27-gitlab与 gitlab runner 安装问题/"},"frontmatter":{"title":"gitlab与 gitlab runner 安装问题"}},"next":{"fields":{"slug":"/react-table/"},"frontmatter":{"title":"React表格处理"}}}}