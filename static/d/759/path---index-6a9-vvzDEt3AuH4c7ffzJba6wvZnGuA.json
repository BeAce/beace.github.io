{"data":{"site":{"siteMetadata":{"title":"Beace Blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"前言 此篇接上篇 Clean Blog by Node && React…","fields":{"slug":"/clean-blog-by-react-and-nodejs-5/"},"frontmatter":{"date":"Invalid date","title":"Clean Blog by Node && React 5"}}},{"node":{"excerpt":"前言 此记录接上次记录  Clean Blog by Node && React 主要任务为记录静态页面的构造（ ） clean-blog 的应用，在这里放出其地址（ https://startbootstrap.com/template-overviews/clean-blog…","fields":{"slug":"/clean-blog-by-react-and-nodejs-2/"},"frontmatter":{"date":"Invalid date","title":"Clean Blog by Node && React 2"}}},{"node":{"excerpt":"…","fields":{"slug":"/2017-09-19-写给弟弟，玄烨/"},"frontmatter":{"date":"Invalid date","title":"写给弟弟，玄烨"}}},{"node":{"excerpt":"需求 为了更好更快更有趣味地学习 这门编程语言，结合 在实际开发场景中的运用，目标建立一个简单的用户列表的 （read，search，add，delete）系统。特别记录此次学习过程。 代码托管 效果 更多效果 前提 必须具有 开发环境 或 IDE…","fields":{"slug":"/scala-palyframework-curd-1/"},"frontmatter":{"date":"Invalid date","title":"快学Scala+Playframework之增删改查——项目搭建（一）"}}},{"node":{"excerpt":"功能 将无序的 类型转化为级联选择（Cascader）的数组 数据结构 原理 通过寻找数组的相同点，构造哈希匹配来实现，减少复杂度和寻址效率。这里之所以这样做，是因为数据的灵活性，既可级联，又可作为长列表。 Screenshot","fields":{"slug":"/2017-10-10-Cascader Format/"},"frontmatter":{"date":"Invalid date","title":"Cascader Format"}}},{"node":{"excerpt":"收集了一下好用的markdown编辑器，都曾经大量使用，都爱不释手。选择恐惧症。。。 1.  stackedit 在线编辑器 支持同步google drive，github等 beta版 2.  dillinger 在线编辑器 支持同步google drive，Dropbox…","fields":{"slug":"/markdown-editor/"},"frontmatter":{"date":"Invalid date","title":"最好用的markdown编辑器汇总"}}},{"node":{"excerpt":"目标 接上一篇 快学Scala+Playframework…","fields":{"slug":"/scala-palyframework-curd-3/"},"frontmatter":{"date":"Invalid date","title":"快学Scala+Playframework之增删改查—— 数据库操作（三）"}}},{"node":{"excerpt":"Array-like 所谓的Array-like,即类数组。其实并不是数组，但是可以像数组一样的进行访问，在这里，仅仅是写法上的一致。其实并不是数组。 对象( Object ) 对象不加引号和加引号的区别，可以参考该链接（ http://stackoverflow.com…","fields":{"slug":"/2017-03-21-JavaScript Array-like/"},"frontmatter":{"date":"Invalid date","title":"JavaScript Array-like"}}},{"node":{"excerpt":"问题描述 在命令行中运行 出现如下信息： 程序会一只卡在红色那句话，正确编译的效果应该为： 解决方案： 在根目录下的 文件中，将： 改为：","fields":{"slug":"/play-framework-pedding/"},"frontmatter":{"date":"Invalid date","title":"Play Framework运行阻塞的问题"}}},{"node":{"excerpt":"HTML5 在元素中增加了*data- * *，可以允许用户自定义属性。这种可读写的方式极大的方便了\n操作元素时的数据存储、状态保留。经常可以在各大主流网站上面看到它的使用，例如淘宝首页。 下面记录下一些使用细节。 语法 在语法上，我们可以在任何DOM…","fields":{"slug":"/2017-04-18-HTML5 dataset 属性不为人知的地方（命名规则和原理）/"},"frontmatter":{"date":"Invalid date","title":"HTML5 dataset 属性不为人知的地方（命名规则和原理）"}}},{"node":{"excerpt":"…","fields":{"slug":"/2017-07-27-惊梦/"},"frontmatter":{"date":"Invalid date","title":"惊梦"}}},{"node":{"excerpt":"引子 想要了解webpack plugin如何编写，首先要了解其应用场景和作用。 可以先浏览这三篇文章 how-to-write-a-plugin compiler API plugins API 除此之外，在这里我和 进行了简单的对比。 plugin & loader…","fields":{"slug":"/2018-01-18-解析webpack plugin的生命周期，书写自己的第一个plugin/"},"frontmatter":{"date":"Invalid date","title":"解析webpack plugin的生命周期，书写自己的第一个plugin"}}},{"node":{"excerpt":"在实际项目开发中，会经常遇到引入第三方库和开发者自己书写的 处理问题。首先我采用了 的语法，借助 的语法可以实现定义变量、全局css、自动添加浏览器内核的前缀等等，除此之外，借助 ，采用css module的实现方式在 中定义 ，并且为了防止重复的 代码，采用了` name…","fields":{"slug":"/2018-02-08-webpack 处理 css module的一种方式/"},"frontmatter":{"date":"Invalid date","title":"webpack 处理 css module的一种方式"}}},{"node":{"excerpt":"关于react的另一个博客 一些关于react的实践 Sponge SpongeBE expressjs-react-blog-server expressjs-react-blog react-babel-webpack-eslint-boilerplate 一些关于scala…","fields":{"slug":"/lab/"},"frontmatter":{"date":"Invalid date","title":"实验室"}}},{"node":{"excerpt":"…","fields":{"slug":"/why-i-leave-job/"},"frontmatter":{"date":"Invalid date","title":"我为什么离职"}}},{"node":{"excerpt":"阿里云的产品提醒还是很友好的，一快到付费节点，那短信提醒简直比移动联通欠话费还来得勤快。 不过重要的消息通知还是很及时。近几天部分服务器迁移，虽迁移顺利，但是由于后台为 Node.js 起的服务，需要手动重启，下面记录下该过程。 以下环境为阿里云ECS, OS: CentOS…","fields":{"slug":"/2017-09-23-记一次阿里云服务器ECS迁移导致的nginx和node有关问题/"},"frontmatter":{"date":"Invalid date","title":"记一次阿里云服务器ECS迁移导致的nginx和node有关问题"}}},{"node":{"excerpt":"直接在代码中添加： 这时候 标签会一直高亮显示，即一直处于 状态不回改变，即使切换路由，如下图所示： x  官方给出的原因时这样的： Now navigate around. Notice anything weird? The link to Home is always…","fields":{"slug":"/React-IndexRoute always-active/"},"frontmatter":{"date":"Invalid date","title":"React IndexRoute always active"}}},{"node":{"excerpt":"需求描述： 书写一个导航栏，使用 的 属性进行布局。\n导航栏内容： 和 构成。\n提示：使用最简单的 结构,拒绝一切多余嵌套 。 展现形式，如下图：\n 实现方式 建立简单的 结构如下代码：(忽略其中的 ，此为 实现的 ). 添加相应的css…","fields":{"slug":"/display-inline/"},"frontmatter":{"date":"Invalid date","title":"display:inline-block不对齐问题"}}},{"node":{"excerpt":"…","fields":{"slug":"/json-server-http-request/"},"frontmatter":{"date":"Invalid date","title":"JSON-Server and XMLHttpRequest"}}},{"node":{"excerpt":"上一次 说到了JavaScript中加引号和不加引号的区别，已经认知到了在大体上还是没有区别的。这里我将深入的了解JavaScript函数中的arguments…","fields":{"slug":"/2017-03-25-JavaScript Arguments/"},"frontmatter":{"date":"Invalid date","title":"JavaScript Arguments"}}},{"node":{"excerpt":"…","fields":{"slug":"/2017-03-18-分享一些CSS画图技巧(4)—插头/"},"frontmatter":{"date":"Invalid date","title":"分享一些CSS画图技巧(4)—插头"}}},{"node":{"excerpt":"…","fields":{"slug":"/2017-03-18-分享一些CSS画图技巧(3)—— 电源插头/"},"frontmatter":{"date":"Invalid date","title":"分享一些CSS画图技巧(3)—— 电源插头"}}},{"node":{"excerpt":"前言 此篇接上篇 Clean Blog by Node && React 3 记录 markdown.md 的使用 记录 文章详情API 以及 提交文章API 的书写 开始实战 markdown…","fields":{"slug":"/clean-blog-by-react-and-nodejs-4/"},"frontmatter":{"date":"Invalid date","title":"Clean Blog by Node && React 4"}}},{"node":{"excerpt":"用web开发app简直耗尽机器的性能和人的体力、精力。\n不过为了满足我的好奇心，经过一番折腾。我还是去做了。 简单来记录一下这个复杂又简单的过程。 step1 我是借助 来进行打包和模拟的。因此首先安装 ，因为基于 ，必须安装 。版本越高越好，但是一定是稳定版，beta…","fields":{"slug":"/hibrid-app-build-env/"},"frontmatter":{"date":"Invalid date","title":"我是如何搭建HyBrid App开发环境的"}}},{"node":{"excerpt":"1、点击头像下拉三角形按钮，进入 2、点击左侧列表按钮中的 3、左侧默认显示的你曾经用 账号登录过的网站，点击 ，作为开发者应用使用。\n4、依次按照表单提示填写内容，最终会生成 和  。 5、在项目中安装两个模块 6、在入口文件中（app.js） 引入模块：…","fields":{"slug":"/github-passport/"},"frontmatter":{"date":"Invalid date","title":"Github中passport的应用（github登录接口）"}}},{"node":{"excerpt":"在使用｀react｀创建多个component的过程中，\n \n该方法创建的 在使用上注意以下几个方面： 方法中加入多个的 会报错。 因此，需要在 中最外层加入一个标签，具体代码如下： //正确书写如下： //错误书写如下： 错误原因： 官方解释 \n https…","fields":{"slug":"/react-bad-way/"},"frontmatter":{"date":"Invalid date","title":"react的缺点（一）：react中多个component的问题记录"}}},{"node":{"excerpt":"React 在 中添加 不可以直接嵌套多个 在 中的 函数添加表格，代码如下： 浏览器会报这样的错误；\n react不会把DOM解析成thead和tbody…","fields":{"slug":"/react-table-add-row/"},"frontmatter":{"date":"Invalid date","title":"React 动态添加一行数据（包括一行表格或者非表格）"}}},{"node":{"excerpt":"…","fields":{"slug":"/react-state/"},"frontmatter":{"date":"Invalid date","title":"react中state变化导致的问题"}}},{"node":{"excerpt":"目标 接上一篇 快学Scala+Playframework之增删改查—— 数据库操作（三） ,完成其他(添加、查询、修改、删除)等API的操作 知识点 数据库操作 列表添加、查询、删除、修改 API…","fields":{"slug":"/scala-palyframework-curd-4/"},"frontmatter":{"date":"Invalid date","title":"快学Scala+Playframework之增删改查—— 数据库操作（四）"}}},{"node":{"excerpt":"问题描述 在引用 时，浏览器的 会自动生成一个 ，如同： 这是为了兼容低版本的浏览器不支持 的做法，但是在 中会觉得好像 或 了某个参数。\n官方的解释是： The URLs in our app right now are built on a hack: the hash…","fields":{"slug":"/react-hash-history-url/"},"frontmatter":{"date":"Invalid date","title":"React HashHistory url参数问题"}}},{"node":{"excerpt":"选择一个字符串  快速地选择一个字符串。不仅是atom…","fields":{"slug":"/2017-07-31-React+Atom开发者增加效率的7个快捷键/"},"frontmatter":{"date":"Invalid date","title":"React+Atom开发者增加效率的7个快捷键"}}},{"node":{"excerpt":"背景 在阅读 Flexbox Patterns…","fields":{"slug":"/div-position-always-bottom/"},"frontmatter":{"date":"Invalid date","title":"div始终位于底部的问题"}}},{"node":{"excerpt":"…","fields":{"slug":"/2018-01-01-消失与重现/"},"frontmatter":{"date":"Invalid date","title":"消失与重现"}}},{"node":{"excerpt":"…","fields":{"slug":"/clean-blog-by-react-and-nodejs-1/"},"frontmatter":{"date":"Invalid date","title":"Clean Blog by Node && React"}}},{"node":{"excerpt":"变量交换 交换 , 值 术语 模板字符串 （template string) 扩展运算符 (…) 定义原生方法 例如： 对象，具有 等方法，如果我们想定义一个全局、或者模块化的方法该如何定义呢？ Math对象新增的方法 Math.trunc…","fields":{"slug":"/2017-04-24-ECMASCRIPT6 -- 碎片化记忆/"},"frontmatter":{"date":"Invalid date","title":"ECMASCRIPT6 -- 碎片化记忆"}}},{"node":{"excerpt":"需求 将项目导入IDE（Intellij） 理解静态页面与服务器请求发生的原理 完成增删改查的静态页面 主要知识点 项目目录的理解 路由配置，请求静态页面的过程 页面传参原理 静态页面代码书写 导入IDE…","fields":{"slug":"/scala-palyframework-curd-2/"},"frontmatter":{"date":"Invalid date","title":"快学Scala+Playframework之增删改查——路由与静态页面（二）"}}},{"node":{"excerpt":"问题描述 中在 的 中直接输入类似以下的代码： 解决方案： 在渲染的过程当中浏览器不会自动添加 和 这样的标签，因此需要在手动添加，如下： **  中如果想要合并单元格的功能，需要大写 ,例如： ，示例代码如下：**","fields":{"slug":"/react-table/"},"frontmatter":{"date":"Invalid date","title":"React表格处理"}}},{"node":{"excerpt":"小程序中使用视频 类似视频这种原生组件，位于小程序的最上层，当页面滚动时，很有可能出现一些定位的元素，被视频组件覆盖，如下图 为了避免一些层级最高的元素覆盖掉原始样式，可以先隐藏视频，将一gif格式的图片代替，并辅助一播放图标，表示该位置是视频 在onLoad…","fields":{"slug":"/2017-12-29-关于小程序视频（video）的一些总结/"},"frontmatter":{"date":"Invalid date","title":"关于小程序视频（video）的一些总结"}}},{"node":{"excerpt":"前言 此次记录承接上篇 Clean Blog by Node && React…","fields":{"slug":"/clean-blog-by-react-and-nodejs-3/"},"frontmatter":{"date":"Invalid date","title":"Clean Blog by Node && React 3"}}},{"node":{"excerpt":"环境 阿里云 ECS（2核4G） CentOS 7.x Mac 问题 问题1 解决方案 并不是给那些提示的文件描述权限，而是给以下目录权限 参考链接 https://mp.weixin.qq.com/s?__biz=MzI1MTA0OTM0Mw==&mid=265095926…","fields":{"slug":"/2018-06-27-gitlab与 gitlab runner 安装问题/"},"frontmatter":{"date":"27 六月, 2018","title":"gitlab与 gitlab runner 安装问题"}}},{"node":{"excerpt":"概念 在一个html文档中，每个元素都被表示为一个 矩形的 的盒子。这每一个矩形的盒子被描述为 盒模型(CSS Box Model) 。并且这个模型描述了元素所占空间的内容。 组成 正常情况 一般情况下，一个盒子是由以下部分组成 width  = content-width…","fields":{"slug":"/2017-11-22-浅谈CSS盒模型（CSS Box Model）/"},"frontmatter":{"date":"22 十一月, 2017","title":"浅谈CSS盒模型（CSS Box Model）"}}},{"node":{"excerpt":"…","fields":{"slug":"/2017-07-12-你喜欢怎样的面试官/"},"frontmatter":{"date":"12 七月, 2017","title":"你喜欢怎样的面试官"}}},{"node":{"excerpt":"首先通过hosts文件翻墙。 具体方法见  https://github.com/racaljk/hosts。 这里简述下Mac下的操作。 将   https://raw.githubusercontent.com/racaljk/hosts/master/hosts…","fields":{"slug":"/2017-03-22-如何科学上网-想要翻墙怎么办/"},"frontmatter":{"date":"22 三月, 2017","title":"如何科学上网-想要翻墙怎么办"}}},{"node":{"excerpt":"对象( Object ) 对象不加引号和加引号的区别 特殊情况不可以用 点 的属性访问","fields":{"slug":"/2017-03-18-JavaScript一些有趣的地方/"},"frontmatter":{"date":"18 三月, 2017","title":"JavaScript一些有趣的地方"}}},{"node":{"excerpt":"三角形相对来说比较简单，我们可以通过设置border…","fields":{"slug":"/2017-03-10-分享一些CSS画图技巧(2)——三角形/"},"frontmatter":{"date":"10 三月, 2017","title":"分享一些CSS画图技巧(2)——三角形"}}},{"node":{"excerpt":"首先在这里声明，对于 画图来说，大部分的图案的宽度甚至高度都是固定的，就算采用百分比的方式来绘制，也会有最外面的边界限制。尽量在PC端或者响应式要求不太高的场景下进行，当然会有一些比较简单的图案绘制能够适应响应式的方式，可以采用canvas或svg…","fields":{"slug":"/2017-03-10-分享一些CSS画图技巧(1)——矩形/"},"frontmatter":{"date":"10 三月, 2017","title":"分享一些CSS画图技巧(1)——矩形"}}},{"node":{"excerpt":"ESLint 可以作为代码审查的工具，来强制的制定一些代码规则或规范来管理、统一一个团队的代码风格。 你可以将它作为一个代码检查的工具，应用它的规则可以检测出代码中某些潜在的问题或者值得优化的代码，并且，你也可以将它作为一个代码规范的标准来养成你的书写习惯。 历史 ESLint…","fields":{"slug":"/2017-02-27-ESLint 的使用/"},"frontmatter":{"date":"27 二月, 2017","title":"ESLint 的使用"}}},{"node":{"excerpt":"背景 我在 项目中定义了一个全局变量 ： 在 的时候传入ejs页面中， 传入完成后，在ejs中想要保留在js代码中，结果发现，每次浏览器都报这个错误 解决方案 最终，在 http://stackoverflow.com/questions/11289793/accessing…","fields":{"slug":"/2017-02-23-EJS在script标签中混合JavaScript代码的问题/"},"frontmatter":{"date":"23 二月, 2017","title":"EJS在script标签中混合JavaScript代码的问题"}}},{"node":{"excerpt":"Math.random…","fields":{"slug":"/2017-02-22-JavaScript-Math.random()/"},"frontmatter":{"date":"22 二月, 2017","title":"JavaScript-Math.random()"}}},{"node":{"excerpt":"ECMAScript 2015 Features arrow && function 相同点 都表示一个函数（箭头函数可以看做   的语法糖） 写法上的不同点（其他不同点参考下文） arrow function function arrow && this…","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c01-arrow-function/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c01-arrow-function"}}},{"node":{"excerpt":"ECMAScript 2015 Features class…","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c02-class-suger/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c02-class-suger"}}},{"node":{"excerpt":"ECMAScript 2015 Features Template Strings 字符串模板是用来构建字符串，并且可以在字符串中添加变量、表达式的语法糖。写法与 中的字符串拼接及其相似。 特点 方便的拼接字符串 提供字符串中添加变量、表达式等 写法 Scala 中的字符串拼接","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c03-string-tpl/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c03-string-tpl"}}},{"node":{"excerpt":"ECMAScript 2015 Features Destructuring…","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c04-destructuring/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c04-destructuring"}}},{"node":{"excerpt":"ECMAScript 2015 Features Generators 可以使用 和 关键字实现 。 可以生成迭代的下一个值，并通过 返回。 写法","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c06-generators/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c06-generators"}}},{"node":{"excerpt":"ECMAScript 2015 Features Modules 遵循着两种比较流行的模块加载器—— ， 模式。在未引用该模块之前，该模块不执行，知道被 。 写法","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c07-modules/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c07-modules"}}},{"node":{"excerpt":"ECMAScript 2015 Features Set && Map 高效的数据结构。 写法 Set Map","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c08-set-map/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c08-set-map"}}},{"node":{"excerpt":"ECMAScript 2015 Features Proxies 代理允许创建具有可用于托管对象的全部行为的对象。可用于拦截，对象虚拟化，日志记录/分析等。","fields":{"slug":"/2017-02-21- ECMAScript 2015 Features-c09-proxies/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c09-proxies"}}},{"node":{"excerpt":"ECMAScript 2015 Features Subclassed 在ES6中， , , 元素都可以被继承子类化。","fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c10-subclassed/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c10-subclassed"}}},{"node":{"excerpt":"ECMAScript 2015 Features Number String Array Ojbect","fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c11-number-string-array-object/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c11-number-string-array-object"}}},{"node":{"excerpt":"ECMAScript 2015 Features Promises 异步编程 写法","fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c12-promises/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c12-promises"}}},{"node":{"excerpt":"ECMAScript 2015 Features Tail Calls(尾递归) 尾递归能够使堆栈不溢出，并且防止内存泄漏。 写法 下面一个例子，为求斐波那契第 项","fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c13-tail-call/"},"frontmatter":{"date":"21 二月, 2017","title":"ECMAScript 2015 Features-c13-tail-call"}}},{"node":{"excerpt":"…","fields":{"slug":"/javaScript-Not-defined-or-Undefined/"},"frontmatter":{"date":"31 十月, 2016","title":"JavaScript Not defined or Undefined"}}},{"node":{"excerpt":"…","fields":{"slug":"/bundle-install-command-not-found/"},"frontmatter":{"date":"10 十月, 2016","title":"bundle install command not found"}}},{"node":{"excerpt":"Who am I 虽然我接触前端已经有将近两年半的时间，但是我还是不敢自诩为一名合格的前端开发工程师。于是我找了一个名词来形容我自己的状态—初级前端开发者。之所以写这篇文章，是想抒发一下对如日中天的微信的感慨。 小白入门 Hello World…","fields":{"slug":"/as-a-newer-to-front-developer/"},"frontmatter":{"date":"23 九月, 2016","title":"我作为初级前端开发者对潮流的认知"}}},{"node":{"excerpt":"…","fields":{"slug":"/aliyun-nginx-certificates/"},"frontmatter":{"date":"18 九月, 2016","title":"在nginx服务器下配置和安装阿里云购买的SSL证书"}}},{"node":{"excerpt":"开发环境 本地环境 OS X  ECS CentOS…","fields":{"slug":"/aliyun-nginx-config/"},"frontmatter":{"date":"12 九月, 2016","title":"阿里云域名解析，Nginx二级域名的配置"}}},{"node":{"excerpt":"个人简介 Beace Lee, 2016年6月毕业于 上海工程技术大学 ，计算机嵌入式方向。 专注 领域开发。如今从事 及 相关技术（栈）开发。 另外两个博客 blog by react github blog 交流 email beaceshimin@gmail.com…","fields":{"slug":"/about/"},"frontmatter":{"date":"05 九月, 2016","title":"关于"}}},{"node":{"excerpt":"This is my first post on my new fake blog! How exciting!","fields":{"slug":"/react-demo/"},"frontmatter":{"date":"01 五月, 2015","title":"React Demo 1"}}}]}},"pageContext":{}}