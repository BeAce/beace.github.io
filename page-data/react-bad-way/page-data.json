{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-bad-way/","webpackCompilationHash":"1e3e2b3aceaf2ae073fa","result":{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"fd40d5a9-8004-5a39-847c-6a1ccd56a083","html":"<p>在使用｀react｀创建多个component的过程中，\n<code class=\"language-text\">React.createClass();</code>\n该方法创建的<code class=\"language-text\">component</code>在使用上注意以下几个方面：</p>\n<ul>\n<li><code class=\"language-text\">return()</code>方法中加入多个的<code class=\"language-text\">component</code>会报错。</li>\n</ul>\n<!--more-->\n<p>因此，需要在<code class=\"language-text\">return</code>中最外层加入一个标签，具体代码如下：</p>\n<p>//正确书写如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Page <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   <span class=\"token function-variable function\">render</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n           <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>Nav<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>Container hello<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n           <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n       <span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>//错误书写如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Page <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">createClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   <span class=\"token function-variable function\">render</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n\n               <span class=\"token operator\">&lt;</span>Nav<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n               <span class=\"token operator\">&lt;</span>Container hello<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>hello<span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n       <span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>错误原因：</p>\n<p><a href=\"https://facebook.github.io/react/tips/maximum-number-of-jsx-root-nodes.html\">官方解释</a>\n<a href=\"https://facebook.github.io/react/tips/maximum-number-of-jsx-root-nodes.html\">https://facebook.github.io/react/tips/maximum-number-of-jsx-root-nodes.html</a></p>\n<blockquote>\n<p>Maximum Number of JSX Root Nodes</p>\n</blockquote>\n<blockquote>\n<p>Currently, in a component’s render, you can only return one node; if you have, say, a list ofdivs to return, you must wrap your components within a div, span or any other component.</p>\n</blockquote>\n<blockquote>\n<p>Don’t forget that JSX compiles into regular JS; returning two functions doesn’t really make syntactic sense. Likewise, don’t put more than one child in a ternary.</p>\n</blockquote>\n<h3>缺点描述以及合理的解决方案</h3>\n<p>在一个组件的render函数中，只能返回一个节点，如果多个组件（节点）罗列，是不允许的。因此如果想返回多个，需要添加额外的<code class=\"language-text\">div</code>，当你的组件越来越多，越来越细化的时候，会生成许多无用的<code class=\"language-text\">div</code>标签。因此，应在最外层引用组件的时候，减少<code class=\"language-text\">&lt;div&gt;&lt;/div&gt;</code>的使用，使用恰当的布局来规避这个问题。</p>","frontmatter":{"title":"react的缺点（一）：react中多个component的问题记录","date":"September 12, 2016"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-bad-way/","previous":{"fields":{"slug":"/lab/"},"frontmatter":{"title":"实验室"}},"next":{"fields":{"slug":"/github-passport/"},"frontmatter":{"title":"Github中passport的应用（github登录接口）"}}}}}