{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019/2019-01-06/【译文】如何在React中渲染模态框/","webpackCompilationHash":"aafb099bc401288f620b","result":{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"99a26ea0-6eed-59a3-9e96-1be2d388dd2a","html":"<blockquote>\n<p>翻译自： <a href=\"https://medium.freecodecamp.org/how-to-render-modals-in-react-bbe9685e947e\">How to render modals in React</a></p>\n</blockquote>\n<p>由于 React 构造 DOM 的方式，模态框可能是一个比较棘手的问题。如果你熟悉 React 基础，你就知道整个 App 通常是一个叫做 <App /> 的组件，这个组件被当做一个叫  <code class=\"language-text\">#root</code>的 <code class=\"language-text\">&lt;div&gt;</code>装载到（append）页面的根节点上。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>noscript</span><span class=\"token punctuation\">></span></span>你需要开启JavaScript运行这个app<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>noscript</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>一旦 <code class=\"language-text\">&lt;App /&gt;</code> 组件渲染到 DOM 节点上，整个 React 应用将会渲染到真实带有 id “#root” 的 HTML 元素 <code class=\"language-text\">&lt;div&gt;&lt;/div&gt;</code> 中。</p>\n<p>所以，显而易见 React App 组件有着非常深层次的嵌套。我们正在讨论几十个层次，甚至更多。因此，如果这些深层次的组件的任意一个想要展示一个模态框（Modal）,将会面临很大的 CSS 问题。</p>\n<p>模态框（Modals）将会在屏幕上延时显示，因此需要在所有元素上占有最高的显示权。如果你不得不增加一个 <code class=\"language-text\">z-index</code>属性来提升它的层次，你必须让它是页面所有元素最大的那个。但是，如果它的嵌套很深，它的父元素在整个 DOM 树上需要采用 CSS 优先级。</p>\n<p>与其破坏整个的 APP 的 CSS 布局，不如我们找另一个方式来渲染——在深层嵌套的元素之外。</p>\n<h2>解决方案 React Portals</h2>\n<p>一种解决方式是通过 ReactDOM protals，将 modal 放到一个div中，作为 “#root” <code class=\"language-text\">&lt;div&gt;&lt;/div&gt;</code> 的子元素。这样做之后，CSS 样式就作用于包裹 modal 的 div ，仅仅和它的同级(兄弟)元素（<code class=\"language-text\">root</code> div）相关，并且不会破坏 <code class=\"language-text\">root</code> 本身。</p>\n<p>我们需要 ReactDOM 的 <code class=\"language-text\">createPortal</code> API 来这样做。一个 protal  非常有效地作为兄弟 div，<code class=\"language-text\">&lt;div id=”root”&gt;</code> 中必须包含所有的 React 组件。</p>\n<ol>\n<li>在 index.html 中，<body> 标签中</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>noscript</span><span class=\"token punctuation\">></span></span>\n      You need to enable JavaScript to run this app.\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>noscript</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>modal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span> .   //ADD THIS\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ol start=\"2\">\n<li>创建一个 Modal.js 组件（样式名来自semantic-UI）：</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">JSX_MODAL</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ui dimmer modals visible active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ui standard modal visible active<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      THIS IS SOME TEXT IN THE MODAL // add some UI features here\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Modal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span><span class=\"token constant\">JSX_MODAL</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#modal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Modal<span class=\"token punctuation\">;</span></code></pre></div>\n<p>可以看到，<code class=\"language-text\">createPortal</code> 接收两个参数：需要被渲染的jsx，和类似 ReactDOM.render 方法，在被渲染的 jsx 的外层目标元素。</p>\n<p>如果你渲染了组件并且触发了它，你会看到它展示的很完美。你现在需要添加适当的<code class=\"language-text\">onClick()</code>处理程序来处理 Modal UI 中的 click 事件，以及如果用户在 Modal UI 外部单击，则模态框应该隐藏。</p>\n<p>你希望通过监听右侧区域中的点击事件然后停止传播来实现此目的，以便根据用户点击的区域产生正确的行为。</p>\n<h2>复用性</h2>\n<p>上面的例子是非常基础的，还不能够作为一个代码块来使用。但是，这是解决模态框的方案。你应该根据你的需要来定制组件。利用 React 复用原则，在 Modal 中，数据不能够使用硬编码，通过传递内容，甚至按照需要传递组件。</p>\n<p>例如，在我的一个项目中，当用户将要从数据库中删除一些东西的时候，我弹出一个模态框。因此我的组件被称为 <code class=\"language-text\">&lt;DeleteThis /&gt;</code>。它渲染了一个<code class=\"language-text\">&lt;Modal /&gt;</code>，这是使基础 <code class=\"language-text\">&lt;DeleteThis /&gt;</code> 页面变暗的叠加层。</p>\n<p>在 <code class=\"language-text\">&lt;Modal /&gt;</code> 中的组件被称为 <code class=\"language-text\">&lt;InnerModal /&gt;</code>，这是一个拥有真正交互能力的组件，包含头部(headers)、内容(content)和文本(text)。</p>\n<p>因此我的 <code class=\"language-text\">&lt;DeleteThis /&gt;</code> 组件创建了一个 <code class=\"language-text\">props</code> 传递给 <code class=\"language-text\">&lt;Modal /&gt;</code> ，再传递给 <code class=\"language-text\">&lt;InnerModal /&gt;</code>，因此 <code class=\"language-text\">&lt;DeleteThis /&gt;</code> 的 render 方法应该长这样:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Modal</span></span>\n          <span class=\"token attr-name\">content</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderContentProp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">header</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Delete this?<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">actions</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderActionButtons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">onDismiss</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onDismiss<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">renderActionButtons</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//return JSX that renders action buttons...</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ui button primary<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ui button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Cancel</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>实际的 Modal Component 长这样:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ModalInner <span class=\"token keyword\">from</span> <span class=\"token string\">'./modal-inner'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Modal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ReactDOM\n    <span class=\"token punctuation\">.</span><span class=\"token function\">createPortal</span><span class=\"token punctuation\">(</span>\n       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ModalInner</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n       document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#modal\"</span><span class=\"token punctuation\">)</span>                      <span class=\"token comment\">//target DOM element</span>\n     <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Modal<span class=\"token punctuation\">;</span></code></pre></div>\n<p>最终，它成功的渲染了。</p>\n<p>模态框，使用React Portal！希望你喜欢这个😃 并希望它能为你节省一些时间…</p>","frontmatter":{"title":"【译文】如何在 React 中渲染模态框","date":"January 01, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019/2019-01-06/【译文】如何在React中渲染模态框/","previous":{"fields":{"slug":"/2019/2019-01-06/2019前端学习计划清单/"},"frontmatter":{"title":"2019 前端学习计划清单"}},"next":{"fields":{"slug":"/2019/01-11/有关Windows平台下的自动更新方案/"},"frontmatter":{"title":"有关Electron 在 Windows平台下的自动更新方案"}}}}}