{"componentChunkName":"component---src-templates-blog-post-js","path":"/2017-02-21- ECMAScript 2015 Features-c02-class-suger/","webpackCompilationHash":"a7e2b21b509852c48099","result":{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"05964fd4-866a-52b4-b951-72e3c087b0bd","html":"<h1>ECMAScript 2015 Features</h1>\n<h2>class</h2>\n<p><code class=\"language-text\">ES6</code>中的<code class=\"language-text\">class</code>关键字是<code class=\"language-text\">JavaScript</code>实现面向对象语法的一种语法糖。这种模式，或者说方式对于繁琐的原型继承以及对象字面量的表达方式有了更进一步的语义上的成熟。<code class=\"language-text\">class</code>关键字在<code class=\"language-text\">java</code>,<code class=\"language-text\">scala</code>面向对象的语言中，运用的很成熟。不可否认，<code class=\"language-text\">ECMAScript</code>标准的制定者有意向这方面靠近。</p>\n<h3>特点</h3>\n<ul>\n<li>写法更贴近经典面向对象的写法</li>\n<li><code class=\"language-text\">constructor</code></li>\n<li><code class=\"language-text\">super</code></li>\n<li><code class=\"language-text\">static method</code></li>\n<li><code class=\"language-text\">extends</code></li>\n</ul>\n<h3>写法</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">sex</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>friends <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex <span class=\"token operator\">=</span> sex <span class=\"token operator\">||</span> <span class=\"token string\">'男'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'性别：'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">static</span> <span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this is a static method!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">var</span> user <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"女\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span><span class=\"token function\">getSex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//性别： 女</span>\nUser<span class=\"token punctuation\">.</span><span class=\"token function\">method</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//this is a static method!</span></code></pre></div>","frontmatter":{"title":"ECMAScript 2015 Features-c02-class-suger","date":"February 21, 2017"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2017-02-21- ECMAScript 2015 Features-c02-class-suger/","previous":{"fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c13-tail-call/"},"frontmatter":{"title":"ECMAScript 2015 Features-c13-tail-call"}},"next":{"fields":{"slug":"/2017-02-21-ECMAScript 2015 Features-c12-promises/"},"frontmatter":{"title":"ECMAScript 2015 Features-c12-promises"}}}}}