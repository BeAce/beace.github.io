{"componentChunkName":"component---src-templates-blog-post-js","path":"/ant-pro-2-https/","webpackCompilationHash":"1e3e2b3aceaf2ae073fa","result":{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"73209263-d6f9-5097-b85d-1497c9b8deb6","html":"<h2>需求</h2>\n<p>在使用定制化框架Antd-Pro开发前端项目时，在客户端需要与硬件交互的情况下，需要在本地开发开启HTTPS，例如二次验证U2F。</p>\n<h2>问题描述</h2>\n<p>antd-pro 本身就是一个隔离的沙盒，虽然脚手架本身的服务基于webpack-dev-server来启动，但是高度的封装导致一些webpack的options不能够定制化。但是webpack-dev-server本身是提供本地SSL证书以及HTTPS配置的。因此，这就需要去修改antd-pro的源码，这又引申出另一个问题，如果ant-pro更新，自己修改的代码势必会被覆盖，所以最好的方式是发起pr来让项目的开发者来合并，这样一劳永逸。</p>\n<h2>解决方案</h2>\n<h3>本地测试</h3>\n<p>首先webpack-dev-server开启HTTPS的配置如下</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n  devServer<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    https<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      key<span class=\"token punctuation\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/path/to/server.key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      cert<span class=\"token punctuation\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/path/to/server.crt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      ca<span class=\"token punctuation\">:</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/path/to/ca.pem'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其次，在webpack-dev-server对config对读取如下</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>https<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">.</span>https <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>cert<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">.</span>cert <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>cert<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>cacert<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options<span class=\"token punctuation\">.</span>ca <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>cacert<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最后可以查看 umi 的源码来看下具体做了哪些封装。以下是代码的部分截取，这里定义了一系列的serverConfig。可以看到是有HTTPS的配置，但是webpack-dev-server的子签名（self-signed）证书本地并不可信。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> serverConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  disableHostCheck<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  compress<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  clientLogLevel<span class=\"token punctuation\">:</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">,</span>\n  hot<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  quiet<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'access-control-allow-origin'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  publicPath<span class=\"token punctuation\">:</span> webpackConfig<span class=\"token punctuation\">.</span>output<span class=\"token punctuation\">.</span>publicPath<span class=\"token punctuation\">,</span>\n  watchOptions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    ignored<span class=\"token punctuation\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  https<span class=\"token punctuation\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HTTPS</span><span class=\"token punctuation\">,</span>\n  historyApiFallback<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  overlay<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  host<span class=\"token punctuation\">:</span> <span class=\"token constant\">HOST</span><span class=\"token punctuation\">,</span>\n  proxy<span class=\"token punctuation\">,</span>\n  contentBase<span class=\"token punctuation\">:</span> contentBase <span class=\"token operator\">||</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CONTENT_BASE</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebpackDevServer</span><span class=\"token punctuation\">(</span>compiler<span class=\"token punctuation\">,</span> serverConfig<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>因此只需要在serverConfig中加入有关HTTPS的配置即可。在这里可以不必配置CA，可以使用<a href=\"https://github.com/FiloSottile/mkcert\">mkcert</a>来签发一张本机系统可信的证书即可。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> serverConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n  https<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token punctuation\">:</span> <span class=\"token string\">'/your/path/key.pem'</span><span class=\"token punctuation\">,</span>\n  cert<span class=\"token punctuation\">:</span> <span class=\"token string\">'/your/path/cert.pem'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>PR</h3>\n<p>由于有这个<a href=\"https://github.com/umijs/umi/issues/748\">feature</a>，所以向 umi 项目提了 <a href=\"https://github.com/umijs/umi/pull/759\">pr</a>，具体实现通过环境变量的方式。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> fs <span class=\"token keyword\">from</span> <span class=\"token string\">'fs'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CERT</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HTTPS</span> <span class=\"token operator\">&amp;&amp;</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CERT</span> <span class=\"token operator\">?</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">CERT</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">KEY</span> <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">HTTPS</span> <span class=\"token operator\">&amp;&amp;</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">KEY</span> <span class=\"token operator\">?</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">KEY</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">const</span> serverConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//...</span>\n  cert<span class=\"token punctuation\">:</span> <span class=\"token constant\">CERT</span><span class=\"token punctuation\">,</span>\n  key<span class=\"token punctuation\">:</span> <span class=\"token constant\">KEY</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>接下来就是直接通过在npm script里进行对环境变量的定义了。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token string\">\"script\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"APP_TYPE=site HTTPS=true CERT=/Users/beace/Documents/cert/localhost+1.pem KEY=/Users/beace/Documents/cert/localhost+1-key.pem umi dev\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://imgs.beacelee.com/2018/umi/https.jpg\"></p>\n<p>证书如下</p>\n<p><img src=\"https://imgs.beacelee.com/2018/umi/QQ20180927-141825.png\"></p>\n<h2>总结</h2>\n<p>这里其实有一个问题，就是可以看到上面webpack中devserver的配置其实是一个object或boolean。</p>\n<blockquote>\n<p>This object is passed straight to Node.js HTTPS module, so see the HTTPS documentation for more information.</p>\n</blockquote>\n<p>但是由于umi其实是基于webpack-dev-server封装，所以这里直接传递HTTPS中的内容，写法略有差异，本质上一样。</p>","frontmatter":{"title":"在AntPro 2.0中本地开发开启HTTPS","date":"September 27, 2018"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ant-pro-2-https/","previous":{"fields":{"slug":"/2018-06-27-gitlab与 gitlab runner 安装问题/"},"frontmatter":{"title":"gitlab与 gitlab runner 安装问题"}},"next":{"fields":{"slug":"/ci-research/"},"frontmatter":{"title":"关于 CI 及测试有关知识工具总结"}}}}}