{"componentChunkName":"component---src-templates-blog-post-js","path":"/2017-10-10-Cascader Format/","webpackCompilationHash":"1893e940b14bce61c104","result":{"data":{"site":{"siteMetadata":{"title":"Beace Blog","author":"Beace Lee"}},"markdownRemark":{"id":"ddbaa93b-33bc-526c-8e54-fa9109758c6a","html":"<h3>功能</h3>\n<p>将无序的<code class=\"language-text\">[Object Array]</code>类型转化为级联选择（Cascader）的数组</p>\n<!--more-->\n<h3>数据结构</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'IT-123'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1001</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'IT-456'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1002</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'IT-789'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1003</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'EC-000'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1005</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'EC-111'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  id<span class=\"token punctuation\">:</span> <span class=\"token number\">1006</span><span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> <span class=\"token string\">'EC111'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>原理</h3>\n<p>通过寻找数组的相同点，构造哈希匹配来实现，减少复杂度和寻址效率。这里之所以这样做，是因为数据的灵活性，既可级联，又可作为长列表。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> a<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  b<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">:</span> id<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> id<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    label<span class=\"token punctuation\">:</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 构造级联</span>\n<span class=\"token keyword\">const</span> cascader <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  label<span class=\"token punctuation\">:</span> item<span class=\"token punctuation\">,</span>\n  value<span class=\"token punctuation\">:</span> item<span class=\"token punctuation\">,</span>\n  children<span class=\"token punctuation\">:</span> b<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Screenshot</h3>\n<p><img src=\"https://beimg.oss-cn-beijing.aliyuncs.com/cascader.jpg!ace\"></p>","frontmatter":{"title":"Cascader Format","date":"October 10, 2017"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2017-10-10-Cascader Format/","previous":{"fields":{"slug":"/2017-09-23-记一次阿里云服务器ECS迁移导致的nginx和node有关问题/"},"frontmatter":{"title":"记一次阿里云服务器ECS迁移导致的nginx和node有关问题"}},"next":{"fields":{"slug":"/2017-11-22-浅谈CSS盒模型（CSS Box Model）/"},"frontmatter":{"title":"浅谈CSS盒模型（CSS Box Model）"}}}}}